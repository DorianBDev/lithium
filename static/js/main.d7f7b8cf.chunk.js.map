{"version":3,"sources":["AppBar.tsx","HL.tsx","HomePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","grow","flexGrow","menuButton","marginRight","spacing","title","display","fontFamily","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","event","currentTarget","aria-controls","aria-haspopup","className","AppBar","Container","Toolbar","src","style","filter","paddingRight","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","href","target","codeFont","HLsh","props","el","useRef","useEffect","current","hljs","highlightBlock","ref","children","HLcpp","InlineCode","fontWeight","HomePage","paddingTop","fontSize","Button","frameBorder","scrolling","float","data-size","flexDirection","Paper","flex","marginBottom","Icon","flexBasis","Link","textAlign","borderTop","borderBottom","List","ListItem","button","component","ListItemText","primary","darkTheme","createMuiTheme","type","main","App","ThemeProvider","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d7f7b8cf.chunk.js","sourcesContent":["import React from 'react';\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { Container } from '@material-ui/core';\nimport GitHub from '@material-ui/icons/GitHub';\nimport Link from '@material-ui/core/Link/Link';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      display: 'none',\n      fontFamily: \"Major Mono Display\",\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n  }),\n);\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Container>\n          <Toolbar>\n            {/* <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton> */}\n            <img src=\"https://raw.githubusercontent.com/matt-42/lithium/master/images/lithium_logo_white.png\" width=\"40\" \n                  style={{ filter: \"invert(100%)\", paddingRight: \"15px\" }} />\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              lithium\n          </Typography>\n            <div className={classes.grow} />\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n              />\n            </div>\n            <div className={classes.sectionDesktop}>\n                <IconButton href=\"https://github.com/matt-42/lithium\" target=\"_blank\" aria-label=\"Github\" color=\"inherit\">\n                  <GitHub />\n                </IconButton>\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import hljs from 'highlight.js'\nimport \"highlight.js/styles/vs2015.css\"\nimport React, { PropsWithChildren } from 'react';\nimport { useRef, useEffect } from 'react';\n\nexport const codeFont = {\n  fontFamily: \"\\\"Droid Sans Mono\\\", monospace, monospace, \\\"Droid Sans Fallback\\\"\",\n  fontSize: \"14px\"\n}\n\nexport const HLsh = (props: PropsWithChildren<{}>) => {\n\n  const el = useRef<HTMLPreElement>(null);\n\n  useEffect(() => {\n    if (!el.current) return;\n    hljs.highlightBlock(el.current);\n  }, [el.current !== null]);\n\n  return <pre><code ref={el} className=\"shell\">{props.children}</code></pre>\n}\n\n\nexport const HLcpp = (props: PropsWithChildren<{}>) => {\n\n  const el = useRef<HTMLPreElement>(null);\n\n  useEffect(() => {\n    if (!el.current) return;\n    hljs.highlightBlock(el.current);\n  }, [el.current !== null]);\n\n  return <pre><code ref={el} className=\"c++\">{props.children}</code></pre>\n}\n\nexport const InlineCode = (props: PropsWithChildren<{}>) => {\n  return <span style={{ fontFamily: codeFont.fontFamily, fontWeight: \"bold\" }}>{props.children}</span>\n}","import Container from \"@material-ui/core/Container\"\nimport Link from \"@material-ui/core/Link\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport Icon from \"@material-ui/core/Icon\"\nimport React from \"react\"\nimport { HLcpp, HLsh, InlineCode } from \"./HL\"\nimport Paper from \"@material-ui/core/Paper\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport List from \"@material-ui/core/List\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\n\n\nexport const HomePage = () => {\n  return <Container>\n    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", paddingTop: \"100px\" }}>\n\n      <img src=\"https://raw.githubusercontent.com/matt-42/lithium/master/images/lithium_logo_white.png\" width=\"300\" />\n\n      <div >\n        <h1 style={{ fontFamily: \"Major Mono Display\" }}>lithium</h1>\n        <Typography style={{ fontSize: \"22px\" }}>\n          Build high performance C++ HTTP servers without being a C++ expert.\n      </Typography>\n        <div style={{ height: \"20px\" }}></div>\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-start\", }}>    \n        <Button variant=\"outlined\" color=\"primary\" style={{marginRight: \"45px\"}}>Get Started</Button>\n        <iframe src=\"https://ghbtns.com/github-btn.html?user=matt-42&repo=lithium&type=star&count=true&size=large\" frameBorder=\"0\" scrolling=\"0\" width=\"170\" height=\"30\" title=\"GitHub\"></iframe>\n        <a href=\"https://twitter.com/share\" className=\"twitter-share-button\" style={{float: \"left\", marginLeft: \"-37px\", paddingTop: \"10px\"}} data-size=\"large\">Tweet</a>\n    </div>\n\n      </div>\n\n    </div>\n\n\n\n    <div style={{ display: \"flex\", flexDirection: \"column\",  alignItems: \"center\", paddingTop: \"100px\" }}>\n      <Paper style={{ flex: 1,marginBottom: \"20px\", padding: \"20px\", width: \"700px\",  }}>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Icon>get_app</Icon>\n          <div style={{flexBasis: \"10px\"}}></div>\n          <Typography variant=\"h6\"> Installation</Typography>\n        </div>\n        <div style={{ height: \"20px\" }}></div>\n\n<Typography>\n        The simplest way to use Lithium is to download the cli in your path. It compiles and runs the server's code\n        inside a docker container. The only requirements are Docker and Python>=3.6.\n</Typography>\n\n        <HLsh>\n{\n`$ wget https://raw.githubusercontent.com/matt-42/lithium/master/cli/li\n$ chmod +x ./li`}</HLsh>\n<Typography>\n        Lithium can also run locally. <Link href=\"#\">Check the install guide for more info</Link>. \n</Typography>\n\n      </Paper>\n\n      <Paper style={{ flex: 1, padding: \"20px\", width: \"700px\",  }}>\n\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Icon>api</Icon>\n          <div style={{flexBasis: \"10px\"}}></div>\n          <Typography variant=\"h6\">Hello World</Typography>\n        </div>\n        <div style={{ height: \"20px\" }}></div>\n\n        <Typography>\n          Write your first <InlineCode>hello_world</InlineCode> Lithium server.\n          </Typography>\n        <HLcpp>\n          {\n`// main.cc \n#include <lithium_http_backend.hh>\n            \nint main() {\n  http_api my_api;\n              \n  my_api.get(\"/hello_world\") = \n  [&](http_request& request, http_response& response) {\n    response.write(\"hello world.\");\n  };\n  http_serve(my_api, 8080);\n}\n`}\n        </HLcpp>\n\n        <Typography>\n        And run it:\n        </Typography>\n\n        <HLsh>{\n          `$ li run ./main.cc`}</HLsh>\n\n        <Typography>\n          Behind the scene, <InlineCode>li</InlineCode> will build a lithium docker image, compile and run the server.\n        </Typography>\n\n        <p style={{textAlign:\"right\"}}>\n        <Button variant=\"outlined\" color=\"primary\">Read the docs</Button>\n        </p>\n\n      </Paper>\n      <div style={{ height: \"50px\" }}></div>\n      <div style={{ \n        borderTop: \"1px solid #4a4a4a\",\n        borderBottom: \"1px solid #222222\",\n       width: \"70%\" }}></div>\n      <div style={{ height: \"50px\" }}></div>\n\n      <Typography variant=\"h4\">Lithium's Sponsors</Typography>\n\n      <List>\n        <ListItem button component=\"a\" target=\"_blank\" href=\"https://github.com/Burnett01\" >\n          <ListItemText primary=\"Steven Agyekum (Burnett01)\" />\n        </ListItem>\n      </List>\n  \n      If you find this project helpful and want to support it, give a star to lithium or buy me a coffee!\n      <Link  target=\"_blank\"  href=\"https://github.com/sponsors/matt-42\"><u>More info on my github sponsor page <Icon style={{color: \"pink\"}}>favorite_border</Icon></u></Link> \n\n      <div style={{ height: \"50px\" }}></div>\n      <div style={{ \n        borderTop: \"1px solid #4a4a4a\",\n        borderBottom: \"1px solid #222222\",\n       width: \"70%\" }}></div>\n      <div style={{ height: \"50px\" }}></div>\n\n      <Typography style={{padding: \"30px\"}}>\n        Released under the MIT License. Copyright © 2020 Matthieu Garrigues. \n      </Typography>\n    </div>\n  </Container>\n} ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PrimarySearchAppBar from './AppBar';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Container, Box, Button, Typography } from '@material-ui/core';\nimport { HomePage } from './HomePage';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#f5f5f5',\n      // dark: '#414141'\n    }\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <PrimarySearchAppBar />\n      <HomePage></HomePage>\n      <div>\n\n        <Container className=\"App\" style={{ display: \"flex\" }}>\n{/* \n          <div style={{ flexGrow: 1 }}>\n            <Button variant=\"contained\" color=\"primary\">Test</Button>\n          Content\n          <Typography>Content</Typography>\n        </div>\n          <div style={{ flexBasis: \"300px\" }}>\n            Menu\n        </div> */}\n        </Container >\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}