{"version":3,"sources":["Documentation.tsx","Search.tsx","AppBar.tsx","HL.tsx","HomePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["docUrls","formatUrl","s","replace","toLowerCase","docRenderer","code","infostring","escaped","hljs","highlight","value","heading","text","level","escapedText","paragraph","src","cppToMarkdown","marker","markerpos","indexOf","substring","length","sectionUrl","item","url","path","it","unshift","parent","console","log","shift","pop","sectionPath","a","searchIndex","hierarchy","Object","values","fetch","then","r","content","items","lexer","split","parents","type","itempos","depth","parentpos","children","push","section","documentationIndex","indexDocumentation","generateDocumentation","doc_url","marked","use","renderer","Documentation","history","useHistory","sectionId","useParams","useState","setContent","menu","setMenu","makeMenu","disablePadding","map","ListItem","key","button","component","href","onClick","e","preventDefault","setLocation","style","paddingLeft","fontFamily","useEffect","c","prevHash","window","location","hash","Container","position","paddingTop","className","width","top","marginLeft","height","overflow","Paper","flexGrow","textAlign","padding","dangerouslySetInnerHTML","__html","filterOptions","createFilterOptions","matchFrom","ignoreAccents","ignoreCase","stringify","option","Search","index","setIndex","useTheme","Autocomplete","id","options","renderInput","params","TextField","label","variant","onChange","URL","pathname","toString","getOptionLabel","renderOption","state","inputValue","idx","snippet","Math","max","min","display","flexDirection","borderLeft","Typography","useStyles","makeStyles","theme","createStyles","grow","menuButton","marginRight","spacing","title","breakpoints","up","inputRoot","color","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","classes","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","event","currentTarget","aria-controls","aria-haspopup","AppBar","Toolbar","paddingRight","noWrap","underline","setLocationCallback","target","codeFont","HLsh","props","el","useRef","current","highlightBlock","ref","HLcpp","InlineCode","fontWeight","HomePage","screen700","useMediaQuery","alignItems","justifyContent","fontSize","Button","process","frameBorder","scrolling","float","data-size","flex","marginBottom","Icon","flexBasis","borderTop","borderBottom","ListItemText","primary","darkTheme","createMuiTheme","palette","main","typography","h1","h2","h3","App","basename","ThemeProvider","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.64a6bae5.chunk.js","sourcesContent":["import { ListItem } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport List from \"@material-ui/core/List/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport hljs from 'highlight.js';\nimport \"highlight.js/styles/vs2015.css\";\nimport marked, { lexer } from \"marked\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { setLocation } from \"./App\";\n\nconst docUrls: { [s: string]: string } = {\n  \"getting-started\": \"https://raw.githubusercontent.com/matt-42/lithium/master/docs/getting_started.md\",\n  \"sql\": \"https://raw.githubusercontent.com/matt-42/lithium/master/docs/sql.cc\",\n  \"http-server\": \"https://raw.githubusercontent.com/matt-42/lithium/master/docs/http_server.cc\",\n  \"json\": \"https://raw.githubusercontent.com/matt-42/lithium/master/docs/json.cc\"\n}\n\nfunction formatUrl(s: string) {\n  return s.replace(/[^a-zA-Z0-9]/g, \"-\").toLowerCase();\n}\n\nconst docRenderer = {\n  code(code: string, infostring: string, escaped: boolean) {\n    return `<pre><code class=\"hljs cpp c++\">${hljs.highlight(\"c++\", code).value}</code></pre>`;\n  },\n  heading(text: string, level: number) {\n    const escapedText = text.toLowerCase().replace(/[^\\w]+/g, '-');\n    return `\n    <a name=\"${escapedText}\" class=\"anchor\" href=\"#${escapedText}\" style=\"top: -90px; display: block;\n    position: relative;\n    top: -60px;\n    visibility: hidden;\">\n    <h${level} class=\"MuiTypography-root MuiTypography-h${level}\" style=\"margin-bottom: ${10 * (6 - level)}px; margin-top: ${10 * (6 - level)}px\">\n    <span class=\"header-link\"></span>\n    </a>\n    ${text.toLowerCase()}\n    </h${level}>`;\n  },\n  paragraph(src: string) {\n    return `<p class=\"MuiTypography-root MuiTypography-body1\">${src}</p>`\n  }\n};\n\nfunction cppToMarkdown(code: string) {\n  // Convert c++ to markdown:\n  // replace c++ comment with markdown c++ code\n  let marker = \"__documentation_starts_here__\";\n  let markerpos = code.indexOf(marker)\n  if (markerpos != -1)\n    code = code.substring(markerpos + marker.length);\n  code = code.replace(/\\n[\\s]*\\/\\*/g, '\\n```\\n');\n  code = code.replace(/\\n[\\s]*\\*\\//g, '\\n```c++\\n');\n  code = '```c++\\n' + code + '```\\n';\n\n  code = code.replace(/```c\\+\\+[\\n ]*```/, '');\n  return code;\n}\n\ninterface SectionNode {\n  text: string,\n  depth: number,\n  children: { [k: string]: SectionNode },\n  parent: SectionNode | null\n};\n\nexport const sectionUrl = (item: SectionNode) => {\n  let url = \"/\";\n  let path : string[] = [];\n  let it : SectionNode | null = item;\n  while (it)\n  {\n    path.unshift(it.text);\n    it = it.parent;\n  }\n  // return url + formatUrl(path.shift() as string) + \"#\" + path.map(formatUrl).join(\"/\");\n  console.log(path);\n  url += formatUrl(path.shift() as string);\n  if (path.length)\n    url += \"#\" + formatUrl(path.pop() as string);\n  return url;\n}\n\nexport const sectionPath = (item: SectionNode) => {\n  if (item.parent)\n    return item.parent.text + \" / \" + item.text;\n  else\n    return item.text;\n}\n\nexport type DocHierarchy = { [k: string]: SectionNode };\nexport type DocIndexEntry = { text: string, section: SectionNode };\nexport type DocIndex = DocIndexEntry[];\n\nexport async function indexDocumentation()\n  : Promise<[DocHierarchy, DocIndex]> {\n\n  let searchIndex: DocIndex = [];\n  let hierarchy: DocHierarchy = {};\n\n  for (let url of Object.values(docUrls)) {\n    let content: string = await fetch(url).then(r => r.text());\n\n    let items: any[] = lexer(url.split('.').pop() == \"md\" ? content : cppToMarkdown(content));\n\n    let parents: (SectionNode | null)[] = [];\n    for (let item of items) {\n      if (item.type === \"heading\") {\n\n        let itempos = item.depth - 1;\n        let parentpos = item.depth - 2;\n\n        if (item.depth > 1) {\n          // find parent.\n          while (parentpos > 0 && !parents[parentpos]) parentpos--;\n\n          let parent = parents[parentpos] as SectionNode;\n          if (!parent)\n          {\n            console.log(parents);\n            console.log(item);\n          }\n          // add item as child to parent.\n          parent.children[item.text] = { text: item.text, depth: item.depth, children: {}, parent };\n\n          // add item to the parent array.\n          // while (parents.length < item.depth) parents.push(null);\n          parents.length = itempos + 1;\n          console.log(\"new length: \", parents.length);\n          parents[itempos] = parent.children[item.text];\n        }\n        else {\n          hierarchy[item.text] = { text: item.text, depth: item.depth, children: {}, parent: null };\n          parents.length = itempos + 1;\n          console.log(\"new length: \", parents.length);\n          parents[0] = hierarchy[item.text];\n        }\n\n        // index item\n        searchIndex.push({ text: item.text || \"\", section: parents[itempos] as SectionNode });\n      }\n      else {\n        // index non headings nodes.\n        if (parents.length)\n          searchIndex.push({ text: item.text || \"\", section: parents[parents.length - 1] as SectionNode });\n      }\n    }\n  }\n  return [hierarchy, searchIndex];\n}\n\nexport const documentationIndex = indexDocumentation();\n\nasync function generateDocumentation(doc_url: string) {\n  marked.use({ renderer: docRenderer as any });\n\n  // Fecth the c++ code.\n  let code: string = await fetch(doc_url).then(r => r.text());\n  // Remove doc preambule.\n\n  return marked(doc_url.split('.').pop() == \"md\" ? code : cppToMarkdown(code));\n}\n\nexport const Documentation = () => {\n\n  const history = useHistory();\n  let { sectionId } = useParams<{ sectionId: string }>();\n\n  const [content, setContent] = useState(\"\")\n  const [menu, setMenu] = useState<any>(null)\n\n  function makeMenu(hierarchy: DocHierarchy) {\n\n    if (!hierarchy) return <></>;\n\n    return <List disablePadding>\n      {Object.values(hierarchy).map((item: SectionNode) => <>\n        <ListItem key={item.text} button\n          component=\"a\"\n          href={sectionUrl(item)}  \n          // ContainerProps={{ onClick: (e) => e.preventDefault() }}\n          onClick={(e:any) => {\n            e.preventDefault()\n            setLocation(sectionUrl(item), history);\n          }}//\"return false;\"        \n          style={{ paddingLeft: `${10 * item.depth}px` }}>\n          {\n            !item.parent ? <span style={{fontFamily: \"Major Mono Display\"}}>{item.text.toLowerCase()}</span>\n            : <Typography>{item.text}</Typography>          \n          }\n        </ListItem>\n        {makeMenu(item.children)}\n      </>)}\n    </List>\n  }\n\n\n  useEffect(() => {\n    (async () => {\n      let menu = makeMenu((await documentationIndex)[0]);\n      console.log(menu);\n      setMenu(menu);\n      if (!docUrls[sectionId])\n        setContent(sectionId + \": Page not found\");\n      else\n        await generateDocumentation(docUrls[sectionId]).then(c => setContent(c));\n      let prevHash = window.location.hash;\n      window.location.hash = \"\";\n      window.location.hash = prevHash;\n    })();\n\n  }, [sectionId]);\n\n\n  return <div>\n<Container style={{paddingLeft: \"240px\", position: \"relative\", paddingTop: \"100px\"}}>\n\n      <div className=\"docMenu\" style={{ position: \"fixed\", width: \"220px\", top: \"100px\", marginLeft: \"-240px\", height: \"100%\", overflow: \"scroll\" }}>\n        {menu}\n      </div>\n      <Paper style={{ flexGrow: 1, textAlign: \"left\", padding: \"20px\", }}>\n        <div dangerouslySetInnerHTML={{ __html: content }}>\n        </div>\n      </Paper>\n</Container>\n\n  </div>\n\n}\n","import { TextField, Typography, useTheme } from \"@material-ui/core\"\nimport React, { useEffect, useState } from \"react\"\nimport { DocIndex, DocIndexEntry, documentationIndex, sectionPath, sectionUrl } from \"./Documentation\"\nimport Autocomplete, { AutocompleteRenderOptionState, createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { options } from \"marked\";\nimport { useHistory } from \"react-router-dom\";\nimport InputAdornment from \"@material-ui/core/InputAdornment/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon/Icon\";\nimport { DesktopWindows } from \"@material-ui/icons\";\n\nconst filterOptions = createFilterOptions({\n  matchFrom: 'any',\n  ignoreAccents: true,\n  ignoreCase: true,\n  stringify: (option: DocIndexEntry) => option.text,\n});\n\nexport const Search = () => {\n\n  const history = useHistory();\n\n  const [index, setIndex] = useState<DocIndex | null>(null)\n\n  useEffect(() => {\n    documentationIndex.then(index => {\n      console.log(index[1]);\n      setIndex(index[1]);\n    });\n  }, []);\n\n  const theme = useTheme();\n\n  if (index)\n    return <Autocomplete\n      id=\"doc_search_bar\"\n      options={index}\n      style={{ width: 600 }}\n      renderInput={(params) => <TextField {...params}\n        // InputProps={{\n        //   // style: { color: theme.palette.common.black, borderColor: theme.palette.common.black },\n        //   startAdornment: (\n        //     <InputAdornment position=\"start\">\n        //       <Icon>search</Icon>\n        //     </InputAdornment>\n        //   ),\n        // }}\n        label=\"Search documentation\"\n        // InputLabelProps={{ style: { color: theme.palette.common.black } }}\n        // style={{ color: theme.palette.common.black, borderColor: theme.palette.common.black }}\n        variant=\"outlined\"\n\n      />}\n      filterOptions={filterOptions}\n      onChange={(e, option) => {\n        console.log(\"selected!\");\n        console.log(option);\n\n        if (option) {\n          let url = sectionUrl(option?.section)\n          let { pathname, hash } = new URL(\"http://test.com\" + url);\n\n          if (window.location.pathname != pathname)\n            history.push(url.toString());\n          else\n            window.location.hash = hash;\n        }\n      }}\n      getOptionLabel={(option) => \"\"}\n      renderOption={(option: DocIndexEntry, state: AutocompleteRenderOptionState) => {\n\n        console.log(state.inputValue);\n        let idx = option.text.indexOf(state.inputValue);\n        // Take 100 chars.\n        let snippet = option.text.substring(Math.max(idx - 50, 0), Math.min(idx + 50, option.text.length));\n        snippet = snippet.replace(state.inputValue, `<u><b>${state.inputValue}</b></u>`)\n        return <div key={sectionPath(option.section) + option.text} style={{ display: \"flex\", flexDirection: \"column\", borderLeft: \"1px solid #999999\", paddingLeft: \"10px\" }}>\n          {\n            option.section.parent ? <div>\n              <Typography variant=\"caption\">{sectionPath(option.section)}</Typography>\n            </div> : <></>\n          }\n          <div>\n            <Typography variant=\"h6\">{option.section.text}</Typography>\n          </div>\n          <div>\n            <div dangerouslySetInnerHTML={{ __html: snippet }}></div>\n          </div>\n        </div>\n      }}\n    />\n\n  else\n    return <></>\n}\n","import React from 'react';\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { Container, TextField } from '@material-ui/core';\nimport GitHub from '@material-ui/icons/GitHub';\nimport Link from '@material-ui/core/Link/Link';\nimport { Search } from './Search';\nimport { setLocationCallback } from './App';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      display: 'none',\n      fontFamily: \"Major Mono Display\",\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n      textDecoration: \"none\"\n    },\n\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n  }),\n);\n\nexport default function PrimarySearchAppBar() {\n  const history = useHistory();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"fixed\" color=\"default\">\n        <Container>\n          <Toolbar>\n            {/* <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton> */}\n            <img src=\"https://raw.githubusercontent.com/matt-42/lithium/master/images/lithium_logo_white.png\" width=\"40\" \n                  style={{ paddingRight: \"15px\" }} />\n            <Typography color=\"inherit\" className={classes.title} variant=\"h6\" noWrap>\n              <Link className={classes.title}  underline=\"none\" onClick={setLocationCallback(\"/\", history)} href=\"/\">lithium</Link>\n          </Typography>\n            <div className={classes.grow} />\n            {/* <TextField>xxxxx</TextField> */}\n            <div>\n              {/* <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div> */}\n              <Search></Search>\n\n              {/* <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n              /> */}\n            </div>\n            <div className={classes.sectionDesktop}>\n                <IconButton href=\"https://github.com/matt-42/lithium\" target=\"_blank\" aria-label=\"Github\" color=\"inherit\">\n                  <GitHub />\n                </IconButton>\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import hljs from 'highlight.js'\nimport \"highlight.js/styles/vs2015.css\"\nimport React, { PropsWithChildren } from 'react';\nimport { useRef, useEffect } from 'react';\n\nexport const codeFont = {\n  fontFamily: \"\\\"Droid Sans Mono\\\", monospace, monospace, \\\"Droid Sans Fallback\\\"\",\n  fontSize: \"14px\"\n}\n\n\nexport const HL = (props: PropsWithChildren<{language : string}>) => {\n\n  const el = useRef<HTMLPreElement>(null);\n\n  useEffect(() => {\n    if (!el.current) return;\n    hljs.highlightBlock(el.current);\n  }, [el.current !== null]);\n\n  return <pre><code ref={el} className={props.language}>{props.children}</code></pre>\n}\n\n\nexport const HLsh = (props: PropsWithChildren<{}>) => {\n\n  const el = useRef<HTMLPreElement>(null);\n\n  useEffect(() => {\n    if (!el.current) return;\n    hljs.highlightBlock(el.current);\n  }, [el.current !== null]);\n\n  return <pre><code ref={el} className=\"shell\">{props.children}</code></pre>\n}\n\n\nexport const HLcpp = (props: PropsWithChildren<{}>) => {\n\n  const el = useRef<HTMLPreElement>(null);\n\n  useEffect(() => {\n    if (!el.current) return;\n    hljs.highlightBlock(el.current);\n  }, [el.current !== null]);\n\n  return <pre><code ref={el} className=\"c++\">{props.children}</code></pre>\n}\n\nexport const InlineCode = (props: PropsWithChildren<{}>) => {\n  return <span style={{ fontFamily: codeFont.fontFamily, fontWeight: \"bold\" }}>{props.children}</span>\n}","import Container from \"@material-ui/core/Container\"\nimport Link from \"@material-ui/core/Link\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport Icon from \"@material-ui/core/Icon\"\nimport React from \"react\"\nimport { HLcpp, HLsh, InlineCode } from \"./HL\"\nimport Paper from \"@material-ui/core/Paper\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport List from \"@material-ui/core/List\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\nimport { setLocation } from \"./App\"\nimport { useHistory } from \"react-router-dom\"\n\n\nexport const HomePage = () => {\n  const history = useHistory()\n  const screen700 = useMediaQuery('(min-width:700px)');\n\n  return <Container>\n    <div style={{ display: \"flex\", alignItems: \"center\", flexDirection: screen700 ? \"row\":\"column\", justifyContent: \"center\", paddingTop: \"100px\" }}>\n\n      <img src=\"https://raw.githubusercontent.com/matt-42/lithium/master/images/lithium_logo_white.png\" width=\"300\" style={{marginRight: \"30px\"}} />\n\n      <div >\n        <Typography variant=\"h1\">lithium</Typography>\n        <Typography style={{ fontSize: \"22px\" }}>\n          Build high performance C++ HTTP servers without being a C++ expert.\n      </Typography>\n        <div style={{ height: \"20px\" }}></div>\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-start\", }}>    \n        <Button variant=\"outlined\" color=\"primary\" onClick={(e) => {\n          setLocation(\"/getting-started\", history);\n          e.preventDefault();\n        }} style={{marginRight: \"45px\"}} href={process.env.PUBLIC_URL + \"/getting-started\"} >Get Started</Button>\n        <iframe src=\"https://ghbtns.com/github-btn.html?user=matt-42&repo=lithium&type=star&count=true&size=large\" frameBorder=\"0\" scrolling=\"0\" width=\"170\" height=\"30\" title=\"GitHub\"></iframe>\n        <a href=\"https://twitter.com/share\" className=\"twitter-share-button\" style={{float: \"left\", marginLeft: \"-37px\", paddingTop: \"10px\"}} data-size=\"large\">Tweet</a>\n    </div>\n\n      </div>\n\n    </div>\n\n\n\n    <div style={{ display: \"flex\", flexDirection: \"column\",  alignItems: \"center\", paddingTop: \"100px\" }}>\n      <Paper style={{ flex: 1,marginBottom: \"20px\", padding: \"20px\", width: screen700 ? \"700px\" : \"calc(100% - 20px)\",  }}>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Icon>get_app</Icon>\n          <div style={{flexBasis: \"10px\"}}></div>\n          <Typography variant=\"h6\"> Installation</Typography>\n        </div>\n        <div style={{ height: \"20px\" }}></div>\n\n<Typography>\n        The simplest way to use Lithium is to download the cli in your path. It compiles and runs the server's code\n        inside a docker container. The only requirements are Docker and Python>=3.6.\n</Typography>\n\n        <HLsh>\n{\n`$ wget https://raw.githubusercontent.com/matt-42/lithium/master/cli/li\n$ chmod +x ./li`}</HLsh>\n<Typography>\n        Lithium can also run locally. <Link href=\"#\"><u>Check the install guide for more info</u></Link>. \n</Typography>\n\n      </Paper>\n\n      <Paper style={{ flex: 1, padding: \"20px\", width: screen700 ? \"700px\" : \"calc(100% - 20px)\", }}>\n\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Icon>api</Icon>\n          <div style={{flexBasis: \"10px\"}}></div>\n          <Typography variant=\"h6\">Hello World</Typography>\n        </div>\n        <div style={{ height: \"20px\" }}></div>\n\n        <Typography>\n          Write your first <InlineCode>hello_world</InlineCode> Lithium server.\n          </Typography>\n        <HLcpp>\n          {\n`// main.cc \n#include <lithium_http_server.hh>\n            \nint main() {\n  http_api my_api;\n              \n  my_api.get(\"/hello_world\") = \n  [&](http_request& request, http_response& response) {\n    response.write(\"hello world.\");\n  };\n  http_serve(my_api, 8080);\n}\n`}\n        </HLcpp>, history\n\n        <Typography>\n        And run it:\n        </Typography>\n\n        <HLsh>{\n          `$ li run ./main.cc`}</HLsh>\n\n        <Typography>\n          Behind the scene, <InlineCode>li</InlineCode> will build a lithium docker image, compile and run the server.\n        </Typography>\n\n        <p style={{textAlign:\"right\"}}>\n        <Button variant=\"outlined\"  onClick={(e) => {\n          setLocation(\"/getting-started\", history);\n          e.preventDefault();\n        }} color=\"primary\" href=\"/getting-started\">Read the docs</Button>\n        </p>\n\n      </Paper>\n      <div style={{ height: \"50px\" }}></div>\n      <div style={{ \n        borderTop: \"1px solid #4a4a4a\",\n        borderBottom: \"1px solid #222222\",\n       width: \"70%\" }}></div>\n      <div style={{ height: \"50px\" }}></div>\n\n      <Typography variant=\"h4\">Lithium's Sponsors</Typography>\n\n      <List>\n        <ListItem button component=\"a\" target=\"_blank\" href=\"https://github.com/Burnett01\" >\n          <ListItemText primary=\"Steven Agyekum (Burnett01)\" />\n        </ListItem>\n      </List>\n  \n      If you find this project helpful and want to support it, give a star to lithium or buy me a coffee!\n      <Link  target=\"_blank\"  href=\"https://github.com/sponsors/matt-42\"><u>More info on my github sponsor page <Icon style={{color: \"pink\"}}>favorite_border</Icon></u></Link> \n\n      <div style={{ height: \"50px\" }}></div>\n      <div style={{ \n        borderTop: \"1px solid #4a4a4a\",\n        borderBottom: \"1px solid #222222\",\n       width: \"70%\" }}></div>\n      <div style={{ height: \"50px\" }}></div>\n\n      <Typography style={{padding: \"30px\"}}>\n        Released under the MIT License. Copyright © 2020 Matthieu Garrigues. \n      </Typography>\n    </div>\n  </Container>\n} ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PrimarySearchAppBar from './AppBar';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Container, Box, Button, Typography } from '@material-ui/core';\nimport { HomePage } from './HomePage';\nimport { Documentation } from './Documentation';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\n\n\n// export const history = createBrowserHistory({\n//   basename: process.env.PUBLIC_URL\n// });\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#f5f5f5',\n      // dark: '#414141'\n    }\n  },\n  typography: {\n    h1: {\n      fontFamily: \"Major Mono Display\",\n      fontSize: \"50px\"\n    },\n    h2: {\n      fontFamily: \"Major Mono Display\",\n      fontSize: \"30px\"\n    },\n    h3: {\n      fontFamily: \"Major Mono Display\",\n      fontSize: \"20px\"\n    }\n  },\n  \n});\n\nexport function setLocation(url : string, history : any) {\n  let [ pathname, hash ] = (process.env.PUBLIC_URL + url).split(\"#\");\n\n  if (window.location.pathname != pathname)\n    history.push(url.toString());\n  else\n    window.location.hash = hash;\n}\nexport function setLocationCallback(url : string, history : any) {\n  return (e : any) => {\n    e.preventDefault();\n    setLocation(url, history);\n  }\n}\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n\n      <ThemeProvider theme={darkTheme}>\n        <PrimarySearchAppBar />\n\n        <Switch>\n          <Route path=\"/:sectionId\">\n            <Documentation />\n          </Route>\n          <Route path=\"/\">\n            <HomePage></HomePage>\n          </Route>\n        </Switch>\n        \n    \n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}